<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
# Generated by Django 3.2.12 on 2022-07-26 01:48
=======
=======
>>>>>>> 51dde47 (Refactor : requirements.txt 파일 수정 및 url, views 수정사항 적용)
# Generated by Django 3.2.12 on 2022-07-25 02:49
>>>>>>> 0938bf0 (Refactor : 로그인시 넘겨주는 데이터 변경 및 프로필 사진 추가)
=======
# Generated by Django 3.2.12 on 2022-07-26 06:29
>>>>>>> 02ef900 (feat : 회원가입기능 학교모델 추가)

import django.contrib.auth.models
=======
=======
>>>>>>> 4863bd5 (Style : 코드 병합)
# Generated by Django 3.2.12 on 2022-07-22 12:13

import django.contrib.auth.models
import django.contrib.auth.validators
=======
# Generated by Django 3.2.12 on 2022-07-26 06:29

import django.contrib.auth.models
>>>>>>> 559df98 ( Feat : 버그 수정)
=======
# Generated by Django 3.2.12 on 2022-07-26 06:29

import django.contrib.auth.models
>>>>>>> 1d03a62 (Backend file 삽입)
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='SchoolInfo',
            fields=[
                ('code', models.CharField(max_length=7, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=15)),
                ('address', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='UserInfo',
            fields=[
<<<<<<< HEAD
<<<<<<< HEAD
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
=======
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
>>>>>>> 559df98 ( Feat : 버그 수정)
=======
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
>>>>>>> 1d03a62 (Backend file 삽입)
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
                ('username', models.CharField(max_length=20, primary_key=True, serialize=False)),
<<<<<<< HEAD
<<<<<<< HEAD
                ('userflag', models.BooleanField(default=False)),
                ('name', models.CharField(default=None, max_length=30)),
                ('birthday', models.DateField(default=None)),
                ('school', models.CharField(default=None, max_length=30)),
                ('school_url', models.CharField(max_length=200)),
                ('phone_number', models.CharField(default=None, max_length=11)),
                ('grade', models.IntegerField(blank=True, null=True)),
=======
                ('userflag', models.BooleanField(blank=True, default=False)),
                ('name', models.CharField(blank=True, default=None, max_length=30)),
                ('birthday', models.DateField(blank=True, default=None)),
                ('school', models.CharField(blank=True, max_length=30)),
                ('phone_number', models.CharField(blank=True, max_length=11)),
                ('grade', models.IntegerField(blank=True)),
>>>>>>> 0938bf0 (Refactor : 로그인시 넘겨주는 데이터 변경 및 프로필 사진 추가)
=======
=======
                ('username', models.CharField(max_length=20, primary_key=True, serialize=False)),
>>>>>>> 559df98 ( Feat : 버그 수정)
=======
                ('username', models.CharField(max_length=20, primary_key=True, serialize=False)),
>>>>>>> 1d03a62 (Backend file 삽입)
                ('userflag', models.BooleanField(blank=True, default=False)),
                ('name', models.CharField(blank=True, default=None, max_length=30)),
                ('birthday', models.DateField(blank=True, default=None)),
                ('phone_number', models.CharField(blank=True, max_length=11)),
                ('grade', models.IntegerField(blank=True)),
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 02ef900 (feat : 회원가입기능 학교모델 추가)
=======
>>>>>>> 559df98 ( Feat : 버그 수정)
=======
>>>>>>> 1d03a62 (Backend file 삽입)
                ('class_field', models.IntegerField(blank=True, null=True)),
                ('subject', models.CharField(blank=True, max_length=20, null=True)),
                ('homeroom_teacher_flag', models.IntegerField(null=True)),
                ('plus_point', models.IntegerField(default=0)),
                ('minus_point', models.IntegerField(default=0)),
                ('profil', models.CharField(blank=True, max_length=45, null=True)),
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> de4f72ef6ae7757130d7c0a354baf736731aa7be
=======
>>>>>>> 4863bd5 (Style : 코드 병합)
=======
>>>>>>> 559df98 ( Feat : 버그 수정)
=======
>>>>>>> 1d03a62 (Backend file 삽입)
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.schoolinfo')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
